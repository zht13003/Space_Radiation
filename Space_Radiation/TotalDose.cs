using System;


class TotalDose : Space_Radiation.IRadiation
{
    double totalDose;
    public void calRadiation(double[] energy, double[] flux, double shield)
    {
        //shield /= 3.704;
        for(int i = 0; i < energy.Length; i++)
    {
        if (energy[i] == 0) energy[i] = 1;
    }
        #region
        double[,] iw = { { 0.643244361694439  ,  0.401127448046976 ,- 0.0532964143252744 ,0.729200827919499 ,- 0.217019550718672 ,- 0.667249412993785 ,- 0.822037117892492,  0.915408058083275 ,  1.47160485651591 },
            { 0.740707889840807,- 1.07729851095437 ,- 0.370051326070843 ,- 0.638016335156878 , 0.548679955839364 ,  0.468186113311693 ,  0.810616510859444  , 0.102773065750966  , 0.0585081931539878 },
            { -1.09773017693758,  0.688349753848793  , 0.492967335266057, - 0.110014145295365  ,0.103242200849933 ,- 0.501876185484138, - 1.23746819605470, - 0.459637709172152, - 0.501358349278661 },
            { 0.991670434882912 , 1.14970466295582  ,  0.835085769045059 ,  0.621227280500393 ,  0.246710790362644  , 0.202936876841816  , 0.848329414644931 ,  0.184933459154052 ,- 0.301573971780770 },
            { 0.926044533181257,-0.296847626556864,-1.62192895539630,-0.360742435842398,0.835612749926479,0.443634069422590,1.05086731051510,-0.624037191771987,-11.1558419031539},
            {-0.513955419650103,0.439386850513971,-0.200886243809115,0.661189896029003,-0.805581359976298,-0.291381305223138,0.198969851559353,-1.43890102774312,-1.87367955295388 },
            {-0.398838640830191,0.643724658994108,-0.00475180159199644,0.284658982081267,0.739636876607115,-0.485753435090398,-0.884761146041707,-0.486529694101831,1.46100555732353},
            {-0.119861688095650,-0.187278104462006,0.716432306268514,-0.333923356859488,1.11934681916126,0.787587567658824,0.175222299474376,-0.491442437744461,2.48364125350936 },
            { 1.08165040075384,0.347684044265059,0.475799825417195,-0.924891186004428,-0.307424843043878,0.505361085003754,-0.590951511832877,-0.807420371435058,-0.482420357378588},
            { 0.189732450678707,-0.702609235206657,0.790771702283755,-0.0338184873223432,0.0600649760378998,-0.143505400197916,0.416397790969324,-0.288444727681547,-6.15517273521616},
            {-0.639118781858653,0.621782746622190,-0.589529395434807,0.751193553842325,-1.18882372096339,-0.231766984604103,-0.338301891807552,-0.434742711007905,-0.625497552778725 },
            {0.891401628759755,-0.740668437055009,0.334459451477414,-0.422649834992488,-0.753570486454128,-0.689412290445238,0.721298391598971,-0.760919389415940,-0.694260373180437 },
            { 1.11530973076938,-0.361597165132239,0.443482542939283,0.778535234242654,0.160196853825249,-0.497967390182699,-0.616928930205177,0.917056843170287,0.486170660656776},
            { -0.0643283899138699,-0.872162431211205,-0.642382335679516,-0.481176259163727,0.575198796534242,0.894773399400279,-0.315834523739829,0.924912820072400,0.258811393209359},
            { 0.579836044709930,-0.774326694351000,-0.719814771559477,0.723428012305922,0.703747024297928,-0.704355914839214,-0.692870559768474,-0.0591186651989028,-1.44512821293514},
            {-0.953648957558141,0.610529678051178,-0.124854181850113,-0.459536147122082,-0.967259616605260,0.603271070578463,-0.952037923624945,-0.140216427196051,-1.18254131468948 },
            {-0.349720259881240,0.555028681721954,1.28688806123455,-0.722301188890820,0.313929279756354,0.280598764357743,1.12479091363652,-0.327740819718201,0.221005867235259 },
            { 1.02307161526803,-0.321549058086455,-0.265644798867997,-0.462598118927204,0.0383410410339015,1.23035870639455,0.291852584456170,1.00260097961681,0.618366688698649},
            {0.722451996657185,1.00243733057802,0.159962742676026,0.206041302825661,-1.13391569033461,-0.977980036249815,0.0659598114712575,-0.345601147801287,0.0288230720246882 },
            { 1.11955645895212,-0.880242531826755,-0.467130511540282,0.0751457634670092,-0.210689642773199,0.0269932263505644,-0.612309290793397,-0.680109409138921,-0.389332788111358}};
        double[] lw = { 0.166581851629185, -0.0860909839592538, 0.369057159418995, 0.0346108983168500, 1.87673748850101, -0.600755603393510, -0.758547941504972, -0.773605909348946, 0.480878522507004, -1.50187125484090, 0.683683815852957, 0.107024133349516, -0.152104830266073, 0.614553763500733, -0.438193580285153, -0.438891145656857, 0.524844402003889, 0.117856977511383, 0.434267686021934, 0.123387301307138 };
        double[] b1 = { -1.11990741789371, -1.87539409648866, 1.52281516812625, -1.09275519244078, -5.17697561477664, 0.164512300431906, 1.32666031311432, -0.236283252604284, -0.580007019122078, -2.82912438635718, 0.115398711730888, 0.201346599676484, 0.593301383932902, -0.668530202182440, 0.309222188916268, -1.10028228448786, -1.37544281036691, 1.46966535715886, 1.73351491040012, 1.97190144417551 };
        double b2 = 0.153413531187809;
        double[] XMAX = { 6.54089909085907, 6.32612285946031, 6.15941666878122, 6.00339175425067, 5.87653899109133, 5.74968622793198, 5.62760210543499, 5.50551798293800, 20 };
        double[] XMIN = { 2.87643027329463, 1.52703325953793, 0.763516629768963, 0, 0, 0, 0, 0, 0 };
        double YMAX = 11.2418;
        double YMIN = 0;
        #endregion
        Neuron_network_2 n = new Neuron_network_2(iw, lw, b1, b2, 20, XMAX, XMIN, YMAX, YMIN);
        double[] input = { energy[0], energy[1], energy[2], energy[3], energy[4], energy[5], energy[6], energy[7], Math.Pow(10, shield) };
        if (shield >= 6) totalDose = 0;
        totalDose = n.input(input);
    }

    public void calRadiation(double[] energy, double[] flux, int instrument)
    {
        throw new NotImplementedException();
    }

    public void calRadiation(double[] energy, double[] flux, double high, double latitude, double longitude, int instrument)
    {
        throw new NotImplementedException();
    }

    public double getRadiation()
    {
        return totalDose;
    }

    //private static void Main(string[] args)
    //{
    //    double[] e = { 3, 4, 5, 6, 7, 8, 9, 10, 11, 12 };
    //    double[] f = { 3474554.201, 2003286.918, 1210558.131, 731523.2661, 485458.0051, 322162.651, 231458.8502, 166292.3966, 124765.9677, 93609.4915 };
    //    double[] f2 = { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 };
    //    for (int i = 0; i <= 20; i ++)
    //    {
    //        Console.WriteLine(getTotal(f, i));//输入为质子通量(未经屏蔽)、等效铝屏蔽厚度，输出为总剂量
    //    }
    //    //不同器件对总剂量效应的阈值不同。以器件1为标准，器件2的阈值是器件1的4倍，器件3是10倍
    //}
}
